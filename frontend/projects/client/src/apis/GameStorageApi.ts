/* tslint:disable */
/* eslint-disable */
/**
 * FizzBuzzService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GameStorage,
} from '../models/index';
import {
    GameStorageFromJSON,

} from '../models/index';

export interface GameStorageDeleteGameCodeDeleteRequest {
    gameCode: string;
}

export interface GameStorageGetGameCodeGetRequest {
    gameCode: string;
}

export interface GameStorageSetGameCodePutRequest {
    gameCode: string;
    body?: string;
}

/**
 * 
 */
export class GameStorageApi extends runtime.BaseAPI {

    /**
     */
    async gameStorageDeleteGameCodeDeleteRaw(requestParameters: GameStorageDeleteGameCodeDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['gameCode'] == null) {
            throw new runtime.RequiredError(
                'gameCode',
                'Required parameter "gameCode" was null or undefined when calling gameStorageDeleteGameCodeDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/GameStorage/Delete/{gameCode}`.replace(`{${"gameCode"}}`, encodeURIComponent(String(requestParameters['gameCode']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameStorageDeleteGameCodeDelete(requestParameters: GameStorageDeleteGameCodeDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameStorageDeleteGameCodeDeleteRaw(requestParameters, initOverrides);
    }

    /**
     */
    async gameStorageGetGameCodeGetRaw(requestParameters: GameStorageGetGameCodeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameStorage>> {
        if (requestParameters['gameCode'] == null) {
            throw new runtime.RequiredError(
                'gameCode',
                'Required parameter "gameCode" was null or undefined when calling gameStorageGetGameCodeGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/GameStorage/Get/{gameCode}`.replace(`{${"gameCode"}}`, encodeURIComponent(String(requestParameters['gameCode']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GameStorageFromJSON(jsonValue));
    }

    /**
     */
    async gameStorageGetGameCodeGet(requestParameters: GameStorageGetGameCodeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameStorage> {
        const response = await this.gameStorageGetGameCodeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async gameStorageListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GameStorage>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/GameStorage/List`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GameStorageFromJSON));
    }

    /**
     */
    async gameStorageListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GameStorage>> {
        const response = await this.gameStorageListGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async gameStorageSetGameCodePutRaw(requestParameters: GameStorageSetGameCodePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['gameCode'] == null) {
            throw new runtime.RequiredError(
                'gameCode',
                'Required parameter "gameCode" was null or undefined when calling gameStorageSetGameCodePut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/GameStorage/Set/{gameCode}`.replace(`{${"gameCode"}}`, encodeURIComponent(String(requestParameters['gameCode']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameStorageSetGameCodePut(requestParameters: GameStorageSetGameCodePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameStorageSetGameCodePutRaw(requestParameters, initOverrides);
    }

}
